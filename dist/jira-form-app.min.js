angular.module("templates",[]).run(["$templateCache",function(e){e.put("form.html",'<span ng-show="inquiryController.showFailureMessage">\n  <h2>Something went wrong. If you continue to see this message, please contact us at {{inquiryController.failureContact}}</h2></span>\n<div ng-show="!inquiryController.showFailureMessage" class="well bs-component">\n  <form id="ss-form" name="ssForm" ng-submit="inquiryController.submit()" novalidate="novalidate" class="form-horizontal">\n    <fieldset>\n      <legend>{{inquiryController.config.title}}</legend>\n      <div ng-repeat="input in inquiryController.config.formFields" ng-switch="input.type" class="form-group"><span ng-switch-when="checkbox"><span class="col-sm-4 left-checkbox">\n            <input type="checkbox" ng-true-value="\'Yes\'" ng-false-value="\'No\'" name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required"/></span>\n          <label for="{{input.inquiryField}}" class="col-sm-8"></label>{{input.name}}</span><span ng-switch-when="prelabel">\n          <div class="col-sm-4"></div>\n          <div class="col-sm-8">{{input.name}}</div></span><span ng-switch-when="freeformText">\n          <label class="col-sm-4 control-label">{{input.name}}<span ng-if="input.required" class="required">*</span><span ng-if="::!input.hideColon">:</span></label>\n          <div class="col-sm-8">\n            <textarea name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required" class="form-control big-text-box"></textarea>\n          </div></span><span ng-switch-default="ng-switch-default">\n          <label for="{{input.inquiryField}}" class="col-sm-4 control-label">{{input.name}}<span ng-if="input.required" class="required">*</span><span ng-if="::!input.hideColon">:</span></label>\n          <div class="col-sm-8"><span ng-switch="input.type"><span ng-switch-when="label"></span><span ng-switch-when="select">\n                <select name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" class="form-control">\n                  <option ng-repeat="value in input.options" value="{{value}}" ng-bind="value"></option>\n                </select></span><span ng-switch-when="text">\n                <input type="{{input.type}}" placeholder="{{input.placeholder}}" name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required" maxlength="{{input.maxlength}}" class="form-control"/>\n                <div ng-messages="ssForm[input.inquiryField].$error" role="alert" class="text-warning">\n                  <div ng-message="required" ng-if="ssForm[input.inquiryField].$touched">{{input.name}} is required</div>\n                  <div ng-message="minlength">Email format appears incorrect, please check</div>\n                </div></span><span ng-switch-when="email">\n                <input type="email" name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required" maxlength="{{input.maxlength}}" class="form-control"/>\n                <div ng-messages="ssForm[input.inquiryField].$error" role="alert" class="text-warning">\n                  <div ng-message="required" ng-if="ssForm[input.inquiryField].$touched">{{input.name}} is required</div>\n                  <div ng-message="minlength">{{input.name}} is too short</div>\n                  <div ng-message="email">Email format appears incorrect, please check</div>\n                </div></span><span ng-switch-when="number">\n                <input type="number" name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required" maxlength="{{input.maxlength}}" class="form-control"/>\n                <div ng-messages="ssForm[input.inquiryField].$error" role="alert" class="text-warning">\n                  <div ng-message="required" ng-if="ssForm[input.inquiryField].$touched">{{input.name}} is required</div>\n                </div></span><span ng-switch-when="tel">\n                <input type="tel" name="{{input.inquiryField}}" ng-model="inquiryController.inquiry[input.inquiryField]" ng-required="input.required" class="form-control"/>\n                <div ng-messages="ssForm[input.inquiryField].$error" role="alert" class="text-warning">\n                  <div ng-message="required" ng-if="ssForm[input.inquiryField].$touched">{{input.name}} is required</div>\n                </div></span><span ng-switch-default="ng-switch-default"><span>{{input.name}} {{input.type}}</span></span></span></div></span></div><span ng-bind="inquiryController.message.success" class="text-success"></span><span ng-show="inquiryController.message.error" ng-bind="inquiryController.message.error + &quot; If you continue to see this error, contact us at &quot; + inquiryController.failureContact" role="alert" class="text-danger"></span>\n      <div class="form-group">\n        <div class="col-sm-8 col-sm-push-4">\n          <input type="hidden" name="draftResponse" value="[]                    "/>\n          <input type="hidden" name="pageHistory" value="0"/><br/>\n          <input id="ss-submit" type="submit" name="submit" value="{{inquiryController.submitting ? &quot;Submitting&quot; : &quot;Submit&quot;}}" ng-disabled="ssForm.$invalid || inquiryController.submitting" class="btn btn-primary"/>\n        </div>\n      </div><span class="col-sm-8 col-sm-offset-4"><span class="required">*</span>Indicates a required field</span>\n    </fieldset>\n  </form>\n</div>')}]),function(e,n,i){"use strict";e.module("jiracreate",["ngMessages","templates"]).controller("InquiryController",["JIRA","$scope","validateConfig",function(n,i,r){function s(e){void 0!=e.status?t.message.error=0==e.status?"The server couldn't be reached":"Failed to access server with return status: "+e.statusText:t.message.error=e}var t=this;t.config=e.isString(i.config)?window[i.config]:i.config;var o={};return t.inquiry=e.copy(o),t.message={},t.failureContact=t.config.errorContact,r(t.config)?(e.forEach(t.config.formFields,function(e){e["default"]&&(t.inquiry[e.inquiryField]=e["default"])}),void(t.submit=function(){t.message.success=void 0,t.message.error=void 0,t.submitting=!0,n.submitRequest(t.inquiry,t.config).then(function(n){var i=n.data;if(!(e.isObject(i)&&e.isString(i.self)&&e.isString(i.key)&&e.isString(i.id)))throw"Got success, but response does not match expectation."}).then(function(){t.message.success="Request has been submitted successfully",t.inquiry=e.copy(o),i.ssForm.$setPristine(),i.ssForm.$setUntouched()})["catch"](s)["finally"](function(){t.submitting=!1})})):void(t.showFailureMessage=!0)}]).service("JIRA",["$http","$filter",function(n,i){this.submitRequest=function(r,s){s.onSubmit&&s.onSubmit(),s.encloseInObject=function(e){return{value:e}},s.generateField=function(e,n){if(e.value)return e.value;if(n[e.inquiryField]){var i=e.map?e.map[n[e.inquiryField]]:n[e.inquiryField];return i=e.filter?e.filter(i):i,e.encloseInObject?s.encloseInObject(i):i}};var t={fields:{summary:e.isString(s.summary)?s.summary:s.summary(r),issuetype:{name:e.isString(s.issueType)?s.issueType:s.issueType(r)},project:{key:e.isString(s.projectKey)?s.projectKey:s.projectKey(r)}}};return e.forEach(s.commonFields,function(e,n){t.fields[n]=s.generateField(e,r)}),e.isDefined(s.issueTypes)&&e.forEach(s.issueTypes[t.fields.issuetype.name],function(e,n){t.fields[n]=s.generateField(e,r)}),t.fields[s.inquiryDumpField]=i("json")(r),n.post(s.proxyUrl+s.server+"/rest/api/2/issue",i("json")(t))}}]).directive("inquiryForm",function(){return{restrict:"E",templateUrl:"form.html",controller:"InquiryController as inquiryController",scope:{config:"="}}}).factory("validateConfig",function(){function n(e){console.warn(e)}return function(i){if(!e.isDefined(i))return n("configuration is undefined"),!1;if(!e.isString(i.proxyUrl))return n("proxyUrl is undefined"),!1;if(!e.isString(i.server))return n("No server provided"),!1;if(!e.isString(i.inquiryDumpField))return n("No field provided to dump input to"),!1;if(!e.isArray(i.formFields)||0==i.formFields.length)return n("No form fields provided"),!1;var r=!0;return e.forEach(i.formFields,function(i,s){i.name&&i.type&&("select"!=i.type||e.isArray(i.options))||(n("Invalid field "+s),r=!1)}),r?i.issueTypes||e.isString(i.issueType)?e.isString(i.issueType)||e.isFunction(i.issueType)?e.isString(i.projectKey)?e.isString(i.summary)||e.isFunction(i.summary)?!0:(n("No summary field string or function defined"),!1):(n("No project key defined"),!1):(n("No issue type function or string defined"),!1):(n("No issue types defined"),!1):!1}});var r=i.querySelectorAll("[ng-app]");0==r.length&&e.element(i).ready(function(){e.forEach(i.getElementsByTagName("inquiry-form"),function(n){e.bootstrap(n,["jiracreate"])})})}(window.angular,window.jiraConfig,window.document);